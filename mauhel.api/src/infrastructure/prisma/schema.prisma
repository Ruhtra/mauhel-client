generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

enum role {
  admin
  sup
  teacher
}

model User {
  id           String   @id
  // passwordHash   String
  birthDate    DateTime
  isSubscribed Boolean

  //login
  name           String
  email          String  @unique
  passwordHash   String
  profilePicture String?
  role           role

  createdAt DateTime
  updatetAt DateTime?

  // uncouple idClientStripe
  idClientStripe String? @unique

  @@map("user")
}

model Exam {
  id          String          @id
  year        Int
  position    String        // Cargo
  level       String        // Nível (Exemplo: Fundamental, Médio, Superior)
  instituteId String
  bankId      String
  // discipline  Discipline[] @relation("ExamDiscipline")
  // texts       Text[]
  questions   Question[]
  isComplete  Boolean       @default(false) // Indica se o cadastro da prova está completo
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt

  institute   Institute     @relation(fields: [instituteId], references: [id])
  bank        Bank          @relation(fields: [bankId], references: [id])
}

model Institute {
  id        String      @id 
  name      String   @unique
  exams     Exam[]  
}

model Bank {
  id        String      @id 
  name      String   @unique
  exams     Exam[]   
}


model Question {
  id          String @id
  examId      String
  // textId      Int?         // Texto associado (opcional)
  statement   String       // Enunciado
  alternatives Alternative[]
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt

  exam        Exam         @relation(fields: [examId], references: [id])
  // text        Text?        @relation(fields: [textId], references: [id])
}


model Alternative {
  id         String      @id 
  
  questionId String
  content    String   // Texto ou URL de imagem
  isCorrect  Boolean  @default(false) // Indica se é a alternativa correta

  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  question   Question @relation(fields: [questionId], references: [id])
}